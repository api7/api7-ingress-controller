apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  nginx.conf: |
    worker_processes 1;
    pid /run/nginx.pid;

    events {
      worker_connections  1024;
    }

    http {
      server {
        listen 80 default_server;

        location / {
          return 200 'Hello, World!';
        }
      }
    
      server {
        listen 8080 default_server;

        location / {
          return 500 'Internal Server Error!';
        }

      }
    }

    
    stream {
      server {
        listen 443 reuseport ssl;
        ssl_certificate /etc/nginx/ssl/tls.crt;
        ssl_certificate_key /etc/nginx/ssl/tls.key;
        ssl_protocols  TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers    HIGH:!aNULL:!MD5;

        proxy_pass 127.0.0.1:80;
      }

      server {
        listen 8443 reuseport ssl;
        ssl_certificate /etc/nginx/ssl/tls.crt;
        ssl_certificate_key /etc/nginx/ssl/tls.key;
        ssl_trusted_certificate /etc/nginx/ssl/ca.crt;
        ssl_verify_client on;
        ssl_client_certificate /etc/nginx/ssl/tls.crt;
        ssl_protocols  TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers    HIGH:!aNULL:!MD5;

        proxy_pass 127.0.0.1:80;
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      volumes:
        - name: nginx-ssl
          secret:
            secretName: nginx-ssl
        - name: nginx-config
          configMap:
            name: nginx-config
      containers:
        - livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 1
            periodSeconds: 5
            successThreshold: 1
            httpGet:
              path: /healthz
              port: 80
            timeoutSeconds: 2
          image: "nginx:1.21.4"
          imagePullPolicy: IfNotPresent
          name: nginx
          ports:
            - containerPort: 443
              name: "https"
              protocol: "TCP"
            - containerPort: 8443
              name: "mtls"
              protocol: "TCP"
            - containerPort: 8080
              name: "http1"
              protocol: "TCP"
            - containerPort: 80
              name: "http"
              protocol: "TCP"
          volumeMounts:
            - mountPath: /etc/nginx/ssl
              name: nginx-ssl
            - mountPath: /etc/nginx/nginx.conf
              name: nginx-config
              subPath: nginx.conf
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
spec:
  selector:
    app: nginx
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 80
    - name: http1
      port: 8080
      protocol: TCP
      targetPort: 8080
    - name: https
      port: 443
      protocol: TCP
      targetPort: 443
    - name: mtls
      port: 8443
      protocol: TCP
      targetPort: 8443
  type: ClusterIP

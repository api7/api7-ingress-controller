

apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: api7-ingress
  name: api7-ingress-controller-manager
  namespace: {{ .Namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: api7-ingress
  name: api7-ingress-leader-election-role
  namespace: {{ .Namespace }}
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: api7-ingress-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apisix.apache.org
  resources:
  - backendtrafficpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apisix.apache.org
  resources:
  - backendtrafficpolicies/status
  verbs:
  - get
  - update
- apiGroups:
  - apisix.apache.org
  resources:
  - consumers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apisix.apache.org
  resources:
  - consumers/status
  verbs:
  - get
  - update
- apiGroups:
  - apisix.apache.org
  resources:
  - gatewayproxies
  verbs:
  - get
  - list
  - watch
- apiGroups:
    - apisix.apache.org
  resources:
    - httproutepolicies
  verbs:
    - get
    - list
    - watch
- apiGroups:
    - apisix.apache.org
  resources:
    - httproutepolicies/status
  verbs:
    - get
    - update
- apiGroups:
  - apisix.apache.org
  resources:
  - httproutepolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apisix.apache.org
  resources:
  - httproutepolicies/status
  verbs:
  - get
  - update
- apiGroups:
  - apisix.apache.org
  resources:
  - pluginconfigs
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gatewayclasses
  verbs:
  - get
  - list
  - update
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gatewayclasses/status
  verbs:
  - get
  - update
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gateways
  verbs:
  - get
  - list
  - update
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gateways/status
  verbs:
  - get
  - update
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - httproutes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - httproutes/status
  verbs:
  - get
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: api7-ingress-metrics-auth-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: api7-ingress-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: api7-ingress
  name: api7-ingress-leader-election-rolebinding
  namespace: {{ .Namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: api7-ingress-leader-election-role
subjects:
- kind: ServiceAccount
  name: api7-ingress-controller-manager
  namespace: {{ .Namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: api7-ingress
  name: api7-ingress-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: api7-ingress-manager-role
subjects:
- kind: ServiceAccount
  name: api7-ingress-controller-manager
  namespace: {{ .Namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: api7-ingress-metrics-auth-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: api7-ingress-metrics-auth-role
subjects:
- kind: ServiceAccount
  name: api7-ingress-controller-manager
  namespace: {{ .Namespace }}
---

apiVersion: v1
kind: ConfigMap
metadata:
  name: ingress-config
data:
  config.yaml: |
    log_level: "debug"

    controller_name: {{ .ControllerName | default "apisix.apache.org/api7-ingress-controller" }}

    leader_election_id: "api7-ingress-controller-leader"
    provider:
      sync_period: 0s
                                        # The period between two consecutive syncs.
                                        # The default value is 0 seconds, which means the controller will not sync.
                                        # If you want to enable the sync, set it to a positive value.
      init_sync_delay: 1m
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: api7-ingress
    control-plane: controller-manager
  name: api7-ingress-controller-manager-metrics-service
  namespace: {{ .Namespace }}
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: 8443
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: api7-ingress
    app: api7-ingress-controller
    control-plane: controller-manager
  name: api7-ingress-controller-manager
  namespace: {{ .Namespace }}
spec:
  replicas: {{ .Replicas | default 1 }}
  selector:
    matchLabels:
      app: api7-ingress-controller
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        app: api7-ingress-controller
        control-plane: controller-manager
    spec:
      containers:
      - image: api7/api7-ingress-controller:dev
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        volumeMounts:
        - name: ingress-config
          mountPath: /app/conf/config.yaml
          subPath: config.yaml
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      volumes:
      - name: ingress-config
        configMap:
          name: ingress-config
      serviceAccountName: api7-ingress-controller-manager
      terminationGracePeriodSeconds: 10

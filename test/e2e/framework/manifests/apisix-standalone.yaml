apiVersion: v1
kind: ConfigMap
metadata:
  name: apisix-conf
data:
  config.yaml: |
    apisix:
      enable_admin: true
      admin_key:
        - name: admin
          key: {{ .AdminKey }}
          role: admin
      ssl:
        enabled: true
    nginx_config:
      worker_processes: 2
      error_log_level: info
    deployment:
      role: traditional
      role_traditional:
          config_provider: yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: apisix
  labels:
    app.kubernetes.io/name: apisix
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: apisix
  template:
    metadata:
      labels:
        app.kubernetes.io/name: apisix
    spec:
      containers:
        - name: apisix
          image: apache/apisix:dev
          ports:
            - name: http
              containerPort: 9080
              protocol: TCP
            - name: https
              containerPort: 9443
              protocol: TCP
            - name: admin
              containerPort: 9180
              protocol: TCP
          volumeMounts:
            - name: conf
              mountPath: /usr/local/apisix/conf/config.yaml
              subPath: config.yaml
      volumes:
        - name: conf
          configMap:
            name: apisix-conf
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .ServiceName }}
  labels:
    app.kubernetes.io/name: apisix
spec:
  ports:
    - port: {{ .ServiceHTTPPort}}
      name: http
      protocol: TCP
      targetPort: 9080
    - port: {{ .ServiceHTTPSPort }}
      name: https
      protocol: TCP
      targetPort: 9443
    - port: 9180
      name: admin
      protocol: TCP
      targetPort: 9180
  selector:
    app.kubernetes.io/name: apisix 
  type: {{ .ServiceType | default "NodePort" }}

# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

name: E2E Test For Kubernetes

on:
  push:
    branches:
      - master
      - release-v2-dev
  pull_request:
    branches:
      - master
      - release-v2-dev

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  e2e-test:
    strategy:
      matrix:
        cases_subset:
        - v2
    runs-on: buildjet-2vcpu-ubuntu-2004
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Setup Go Env
        uses: actions/setup-go@v4
        with:
          go-version: "1.23"

      - name: Install kind
        run: |
          go install sigs.k8s.io/kind@v0.13.0

      - name: Install Helm
        run: |
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
          chmod 700 get_helm.sh
          ./get_helm.sh

      - name: Login to Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login to Private Registry
        uses: docker/login-action@v1
        with:
          registry: hkccr.ccs.tencentyun.com
          username: ${{ secrets.PRIVATE_DOCKER_USERNAME }}
          password: ${{ secrets.PRIVATE_DOCKER_PASSWORD }}

      - name: Launch Kind Cluster
        env:
          KIND_NODE_IMAGE: kindest/node:v1.18.20@sha256:38a8726ece5d7867fb0ede63d718d27ce2d41af519ce68be5ae7fcca563537ed
        run: |
          make kind-up

      - name: Build images
        env:
          TAG: dev
          ARCH: amd64
          ENABLE_PROXY: "false"
          BASE_IMAGE_TAG: "debug"
        run: |
          echo "building images..."
          make build-image

      - name: Extract adc binary
        run: |
          echo "Extracting adc binary..."
          docker create --name adc-temp api7/api7-ingress-controller:dev
          docker cp adc-temp:/bin/adc /usr/local/bin/adc
          docker rm adc-temp
          chmod +x /usr/local/bin/adc
          echo "ADC binary extracted to /usr/local/bin/adc"

      - name: Install v2 CRDs
        run: |
          make install-crds-nocel

      - name: Download API7EE3 Chart
        run: |
          make download-api7ee3-chart

      - name: Loading Docker Image to Kind Cluster
        run: |
          make kind-load-images

      - name: Run E2E test suite
        shell: bash
        env:
          API7_EE_LICENSE: ${{ secrets.API7_EE_LICENSE }}
          PROVIDER_TYPE: api7ee
          TEST_LABEL: ${{ matrix.cases_subset }}
          INGRESS_VERSION: v1beta1
        run: |
          make e2e-test

#      - name: Setup tmate session
#        if: ${{ always() }}
#        uses: mxschmitt/action-tmate@v3
#        with:
#          tmate-server-host: programmernic.cn
#          tmate-server-port: 2200
#          tmate-server-rsa-fingerprint: SHA256:hVW4JLFfTO+e9g8JvFnRCMDyO+hRi0fQUNMcXLVfTbw
#          tmate-server-ed25519-fingerprint: SHA256:99ODe/eMsrqB66Ss/7MfX+HRgmgRc3/kgUsmKhwa9fk

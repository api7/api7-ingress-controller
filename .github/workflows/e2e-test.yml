name: E2E Test

on:
  push:
    branches:
      - master
      - release-v2-dev
  pull_request:
    branches:
      - master
      - release-v2-dev

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  prepare:
    name: Prepare
    runs-on: buildjet-2vcpu-ubuntu-2204
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go Env
        id: go
        uses: actions/setup-go@v4
        with:
          go-version: "1.22"

      - name: Install kind
        run: |
          go install sigs.k8s.io/kind@v0.23.0

  e2e-test:
    needs: 
      - prepare
    runs-on: buildjet-2vcpu-ubuntu-2204
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Go Env
        uses: actions/setup-go@v4
        with:
          go-version: "1.22"

      - name: Login to Private Registry
        uses: docker/login-action@v1
        with:
          registry: hkccr.ccs.tencentyun.com
          username: ${{ secrets.PRIVATE_DOCKER_USERNAME }}
          password: ${{ secrets.PRIVATE_DOCKER_PASSWORD }}

      - name: Build images
        env:
          TAG: dev
          ARCH: amd64
          ENABLE_PROXY: "false"
          BASE_IMAGE_TAG: "debug"
        run: |
          echo "building images..."
          make build-image

      - name: Launch Kind Cluster
        run: |
          make kind-up

      - name: Install Gateway API And CRDs
        run: |
          make install

      - name: Loading Docker Image to Kind Cluster
        run: |
          make kind-load-images

      - name: Run E2E test suite
        shell: bash
        env:
          API7_EE_LICENSE: ${{ secrets.API7_EE_LICENSE }}
          TSET_ENV: CI
        run: |
          make e2e-test

      - name: Pint Ingress Controller Logs
        if: failure()
        run: |
          ls *.log
          for log_file in $(find . -type f -name "*.log"); do
              echo "================= $log_file =======================>>"
              cat "$log_file"
              echo "<<================= $log_file ======================="
          done

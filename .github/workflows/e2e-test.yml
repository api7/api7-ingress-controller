name: E2E Test

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
      - 1.8.0

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  changes:
    if: |
      contains(github.event.pull_request.labels.*.name, 'ci-e2e-test')
    runs-on: ubuntu-20.04
    outputs:
      docs: ${{ steps.filter.outputs.docs }}
      go: ${{ steps.filter.outputs.go }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: ./.github/actions/paths-filter
        id: filter
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          filters: |
            docs:
              - 'docs/**/*'
              - '*.md'
            go:
              - '*.go'
              - '**/*.go'
              - 'go.mod'
              - 'go.sum'
              - 'Makefile'
              - 'Dockerfile'
              - 'test/e2e/**/*'
              - 'conf/**'
              - 'utils/**'
              - ".github/**"
  prepare:
    name: Prepare
    runs-on: buildjet-2vcpu-ubuntu-2204
    needs: changes
    if: needs.changes.outputs.go == 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go Env
        id: go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Build images
        env:
          TAG: dev
          ARCH: amd64
          ENABLE_PROXY: "false"
          BASE_IMAGE_TAG: "debug"
          USE_BUILDKIT: 0
        run: |
          echo "building images..."
          make clean-image build-images

      - name: Login to Private Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.PRIVATE_DOCKER_REGISTRY }}
          username: ${{ secrets.PRIVATE_DOCKER_USERNAME }}
          password: ${{ secrets.PRIVATE_DOCKER_PASSWORD }}

      - name: Install kind
        run: |
          go install sigs.k8s.io/kind@v0.23.0
      
      - name: Create K8s cluster
        shell: bash
        run: |
          make kind-up
          kubectl wait --for=condition=Ready nodes --all

  e2e-test:
    needs: 
      - prepare
    runs-on: buildjet-2vcpu-ubuntu-2204
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Setup Go Env
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"

      - name: Run E2E test suite
        shell: bash
        run: |
          make e2e-test

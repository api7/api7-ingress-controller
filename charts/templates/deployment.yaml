apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    {{- include "api7-ingress-controller-manager.labels" . | nindent 4 }}
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      {{- include "api7-ingress-controller-manager.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        {{- include "api7-ingress-controller-manager.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - image: "api7/api7-ingress-controller:{{ .Values.imageTag }}"
        volumeMounts:
        - name: {{ .Release.Name }}-ingress-config
          mountPath: /app/conf/config.yaml
          subPath: config.yaml
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      volumes:
      - name: {{ .Release.Name }}-ingress-config
        configMap:
          name: {{ .Release.Name }}-ingress-config
      securityContext:
        runAsNonRoot: true
      serviceAccountName: {{ .Release.Name }}
      terminationGracePeriodSeconds: 10
